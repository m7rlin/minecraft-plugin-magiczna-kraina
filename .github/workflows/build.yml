name: Java CI

on:
    push:
        tags:
            - 'v*'
            
            
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v3

          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'adopt'
              cache: maven
              
          - name: Get project version
            uses: avides/actions-project-version-check@v1.4.0
            id: actions_project_version_check
            with:
                token: ${{ secrets.GITHUB_TOKEN }}
                file-to-check: plugin/pom.xml
                only-return-version: true

          - name: Display version (debug)
            run: echo "New version is:" ${{ steps.actions_project_version_check.outputs.version }}

          - name: Build with Maven
            run: |
                mvn -B package --file ./plugin/pom.xml
                mkdir staging && cp plugin/target/original-*.jar "staging/MagicznaKraina-v$Project_Version.jar"
            env:
                Project_Version: ${{ steps.actions_project_version_check.outputs.version }}
                
          - name: Upload jar file as .zip
            uses: actions/upload-artifact@v3
            with:
              name: MagicznaKraina-v${{ steps.actions_project_version_check.outputs.version }}
              path: staging/**.jar
              if-no-files-found: error
              
    release:
        needs: [build]
        runs-on: ubuntu-latest
        name: ðŸš€ release
        permissions:
            contents: write
        steps:
            - name: ðŸ“š checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
          
            - name: Get project version
              uses: avides/actions-project-version-check@v1.4.0
              id: actions_project_version_check
              with:
                 token: ${{ secrets.GITHUB_TOKEN }}
                 file-to-check: plugin/pom.xml
                 only-return-version: true
                  
            - name: Download artifact
              uses: actions/download-artifact@master
              with:
                name: MagicznaKraina-v${{ steps.actions_project_version_check.outputs.version }}
                path: downloads
                
            - name: Display structure of downloaded files
              run: ls -R
              working-directory: downloads
            
            - name: create release
              uses: ncipollo/release-action@v1
              with:
                  generateReleaseNotes: true
                  bodyFile: 'changelog-release.md'
                  artifacts: downloads/MagicznaKraina-v${{ steps.actions_project_version_check.outputs.version }}.jar
                
        
